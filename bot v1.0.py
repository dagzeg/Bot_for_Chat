
import datetime as dt # –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–Ω–µ–π –¥–æ –æ–ø–µ—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –¥–∞—Ç—ã
import re # –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π

import numpy as np # –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π
import telebot # –Ω–∞ —á–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–∞–º –±–æ—Ç
import logging # –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å –ª–æ–≥–∏
import random # —Å–ª—É—á–∞–π–Ω–∞—è –º—É–¥—Ä–æ—Å—Ç—å
import requests # –∑–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã
import os
from config import TOKEN_BOT
from recoginazer import –°onvect # –∫–ª–∞—Å—Å –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
from Button import dice_kb #–ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ football
from telebot import types  # types.Message

bot = telebot.TeleBot(TOKEN_BOT, skip_pending=True)
#—Ç–æ–∫–µ–Ω –±–æ—Ç–∞ + –ø—Ä–æ–ø—É—Å–∫ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π

log = logging.getLogger() #–ª–æ–≥–∏





# –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
Help = """
/help - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ 
/weather - —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ
/wisdom - –¥–æ–±–∞–≤–∏—Ç—å –º—É–¥—Ä–æ—Å—Ç—å
/football - —Å—ã–≥—Ä–∞—Ç—å –≤ —Ñ—É—Ç–±–æ–ª –≤ —á–∞—Ç–µ #394
/dr - —Å—á–µ—Ç—á–∏–∫ –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π

–†–∞—Å—à–∏—Ñ—Ä—É—é –≥–æ–ª–æ—Å–æ–≤—É—Ö—É
–ú—É–¥—Ä–æ—Å—Ç—å - –ø–æ–¥–µ–ª—é—Å—å –º—É–¥—Ä–æ—Å—Ç—å—é —Å —Ç–æ–±–æ–π
–î–∞ - –ì–∏—Ñ–∫–∞
–ù–µ—Ç - –°—Ç–∏–∫–µ—Ä

"""

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
@bot.message_handler(commands=['start'])
def send_welcome(message):
	bot.reply_to(message, "–ü–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç—É–π —Å–µ–Ω—Å–µ—è, –Ω–∞–ø–∏—à–∏ /help")
# –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –∏ —É–º–µ–Ω–∏—è–º
@bot.message_handler(commands=['help'])
def info_from_bot(message: types.Message):
	bot.reply_to(message, Help)


# –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π(–ø–µ—Ä–µ–≤–æ–¥ –≤ —Ç–µ–∫—Å—Ç)
@bot.message_handler(content_types=['voice'])
def get_audio(message: types.Message):
	file_id = message.voice.file_id # –ü–æ–ª—É—á–∞–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è
	file_info = bot.get_file(file_id) # –∏–∑–≤–ª–µ–∫–∞–µ–º —Ñ–∞–π–ª
	downloaded_file = bot.download_file(file_info.file_path) # —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
	file_name = str(message.message_id) + '.ogg'
# –∏–º—è —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º ogg –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ wav
	name = message.chat.first_name if message.chat.first_name else 'Unicorm_dude' # –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ–≤
	log.info(f'Chat {name} (ID: {message.chat.id}) download file {file_name} ')
# —Å—Ç—Ä–æ–∫–∞ –ª–æ–≥–∞

	with open(file_name, 'wb') as new_file: # —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
		new_file.write(downloaded_file)
	convecter = –°onvect(file_name) # –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å –ø–æ–º–æ—â—å—é —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞
	os.remove(file_name) # —É–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º ogg
	message_text = convecter.audio_to_text() # –ø–µ—Ä–µ–≤–æ–¥ –≤ —Ç–µ–∫—Å—Ç
	del convecter # —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º wav
	bot.reply_to(message, message_text)


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ "–ú—É–¥—Ä–æ—Å—Ç–∏" –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–∞–π–ª, –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –≤—ã–≤–æ–¥–∞ –≤ —á–∞—Ç
@bot.message_handler(commands=['wisdom'])
def add_wisdom(message: types.Message):
	bot.delete_message(message.chat.id, message.id)
	send = bot.send_message(message.from_user.id,
		   '–î–µ–ª–∏—Å—å –º—É–¥—Ä–æ—Å—Ç—å—é —Å–≤–æ–µ–π —Å–æ –º–Ω–æ–π')
	bot.register_next_step_handler(send, new_wisdom) # –æ–∂–∏–¥–∞–Ω–∏–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è

def new_wisdom(message: types.Message):
#–ó–∞–ø–∏—Å—å —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ —Ç–µ–∫—Å—Ç —Å –ø–µ—Ä–≤–æ–π –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤–æ–π
	write_wisdom = message.text.capitalize()
# –æ—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ —Å "–ú—É–¥—Ä–æ—Å—Ç—è–º–∏" –∏ —Ä–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∏—Ö –≤ –ª–∏—Å—Ç
	f = open('wisdom.txt', 'r+')
	new_list = []
	for i in f:
		new_list.append(i)
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤–≤–µ–¥–µ–Ω–Ω–æ–π "–ú—É–¥—Ä–æ—Å—Ç–∏" –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª, –∏–ª–∏ –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è, —á—Ç–æ —Ç–∞–∫–∞—è —É–∂–µ –µ—Å—Ç—å.
	if write_wisdom not in new_list:
		f.write(f'\n{write_wisdom}')

		bot.send_message(message.from_user.id,f'–ú—É–¥—Ä–æ—Å—Ç—å —Ö–æ—Ä–æ—à–∞—è, –ø—Ä–∏–º—É –º—É–¥—Ä–æ—Å—Ç—å —Ç–≤–æ—é \n \n <em> –¢–≤–æ—è –º—É–¥—Ä–æ—Å—Ç—å:</em> {write_wisdom}',
							       parse_mode='html')
	else:
		bot.send_message(message.from_user.id,f' <b>–ú—É–¥—Ä–æ—Å—Ç—å - {write_wisdom}</b> \n \n –£–∂–µ –∑–Ω–∞—é \n –ï—Å—Ç—å –µ—â–µ-—á—Ç–æ –Ω–∏–±—É–¥—å?',
							parse_mode='html')
	f.close() # –∑–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞

# –í—ã–≤–æ–¥ "–ú—É–¥—Ä–æ—Å—Ç–∏" –≤ —á–∞—Ç
@bot.message_handler(regexp= r'–ú—É–¥—Ä–æ—Å—Ç—å')
def wisdom_chioce(message: types.Message):
	wisdom_list = []
	if message.text.count(' ') < 1:  # –†–µ–∞–∫—Ü–∏—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–ª–æ–≤–æ ¬´–ú—É–¥—Ä–æ—Å—Ç—å¬ª
		file_wisdom = open('wisdom.txt', 'r')
		for i in file_wisdom:
			wisdom_list.append(i) # –ù–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑ —Ñ–∞–π–ª–∞
		file_wisdom.close()
	print(wisdom_list) # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –≤–Ω–µ—Å–µ–Ω–Ω—ã—Ö —Ñ—Ä–∞–∑
	bot.send_message(message.chat.id, random.choice(wisdom_list))


# –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏(chat, username, id)
@bot.message_handler(commands=['message'])
def message_info(message: types.Message):
	bot.send_message(message.from_user.id, message)

	bot.delete_message(message.chat.id, message.id)


# –∏–≥—Ä–∞ –≤ —Ñ—É—Ç–±–æ–ª —Å –ø–æ–º–æ—â—å—é —ç–º–æ–¥–∑–∏ –≤ —á–∞—Ç–µ
@bot.message_handler(commands=['football'])
def only_dice_command(message: types.Message):
	bot.delete_message(message.chat.id, message.id) # –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ —á–∞—Ç–∞
	send = bot.send_message(message.from_user.id,
					'–°–∫–æ–ª—å–∫–æ —É–¥–∞—Ä–æ–≤ –Ω–∞–¥–æ?(–≤—ã–±–µ—Ä–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ)',
									      reply_markup=dice_kb) # –≤—ã–≤–æ–¥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ –ª–∏—á–Ω—ã–π —á–∞—Ç
	bot.register_next_step_handler(send, dice)
# –û–∂–∏–¥–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ª–µ–¥. def

def dice(message: types.Message):
	bot.delete_message(message.chat.id, message.id)
	recevid_message = message.text.lower()
	#–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –µ—Å–ª–∏ –Ω–µ—Ç username
    try:
	    bot.send_message(chat_id=******************, text=f'–ë—å–µ—Ç @{message.from_user.username}')
    except TypeError:
	    bot.send_message(chat_id=******************, text=f'–ë—å–µ—Ç {message.from_user.first_name} {message.from_user.last_name}')
	# –æ—Ç–ø—Ä–∞–≤–∫–∞ —ç–º–æ–¥–∑–∏
	finally:
		if recevid_message == '—Ç—Ä–∏' or recevid_message == '–¥–≤–∞':
			if recevid_message == '—Ç—Ä–∏':
				for ball in range(3):
					bot.send_dice(chat_id=******************,
								  	   emoji="‚öΩ")
				bot.send_dice(chat_id=******************,
							  	   emoji="üé≤")
			elif recevid_message == '–¥–≤–∞':
				for ball in range(2):
					bot.send_dice(chat_id=******************,
								  	   emoji="‚öΩ")
				bot.send_dice(chat_id=******************,
							  	   emoji="üé≤")


# –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–≥–æ–¥—É –≤ –≥–æ—Ä–æ–¥–µ –Ω–∞ –≤—ã–±–æ—Ä
@bot.message_handler(commands=['weather'])
def weather_reqest(message: types.Message):
	bot.delete_message(message.chat.id, message.id)
	send = bot.send_message(message.from_user.id,
               '–ü–æ–≥–æ–¥—É –≤ –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ —Ö–æ—á–µ—à—å —É–∑–Ωa—Ç—å?')

	bot.register_next_step_handler(send, weather_info)

def weather_info(message: types.Message):
	city = message.text.capitalize()

	url = f'https://wttr.in/{city}' # —Å–∞–π—Ç —Å –ø–æ–≥–æ–¥–æ–π –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

	weater_parameters = {
		'O': '',
		'T': '',
		'M': '',
		'format': 2
	} # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏


	request_headers = {'Accept-Language': 'ru'}
# –Ø–∑—ã–∫ –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ


	response = requests.get(url, headers=request_headers,
				          params=weater_parameters)
# –∑–∞–ø—Ä–æ—Å –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏

	bot.send_message(message.from_user.id, f' –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city.capitalize()} - {response.text}')

	bot.delete_message(message.chat.id, message.id)

# –û—Å—Ç–∞—Ç–æ–∫ –¥–Ω–µ–π –¥–æ –æ—Ç–ø—É—Å–∫–∞ –¥–ª—è –ú–∞—Ä–∏–Ω—ã
@bot.message_handler(commands=['date', 'work'])
def date(message: types.Message):
	day_x = dt.date(2022, 12, 24)
# C—Ç–∞—Ç–∏—á–Ω–∞—è –¥–∞—Ç–∞ –¥–æ –∫–æ—Ç–æ—Ä–æ–π –Ω—É–∂–Ω–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å –¥–Ω–∏

	day = dt.date.today()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã
	# –†–∞—Å—á–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–º–∞–Ω–¥—ã
	if message.text == '/date':
		go_away = day_x - day
		bot.send_message(message.chat.id,
						 f'<b>–∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã—Ö –¥–Ω–µ–π</b> <em>–¥–æ –æ—Ç–ø—É—Å–∫–∞ –æ—Å—Ç–∞–ª–æ—Å—å:</em> \n<b>{go_away.days}</b>',
						 																parse_mode='html')
	else:
		go_away = np.busday_count(day, day_x)  # timedelta –¥–ª—è —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π
		bot.send_message(message.chat.id, f' –î–Ω–µ–π –µ—â–µ —Ä–∞–±–æ—Ç–∞—Ç—å - <b>{go_away}</b>',parse_mode='html')

# –û—Ç—Å—á–µ—Ç –¥–Ω–µ–π –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
@bot.message_handler(commands='dr')
def happy_birthday(message: types.Message):
	bot.delete_message(message.chat.id, message.id)

	bot.send_message(message.from_user.id, '<b>–î–Ω–µ–π –¥–æ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å:</b>',parse_mode='html')
	DATABASE = {
		"*******": '2022-01-07',
		"*******": '2022-02-13',
		"*******": '2022-02-20',
		"*******": '2022-04-24',
		"*******": '2022-05-30',
		"*******": '2022-09-01',
		"*******": '2022-10-22',
		"*******": '2022-12-03'
	}
	for name in DATABASE:  # –ü–µ—Ä–µ–±–æ—Ä –∫–ª—é—á–µ–π —Å–ª–æ–≤–∞—Ä—è
		day_x = dt.datetime.strptime(DATABASE[name], '%Y-%m-%d').date()            		# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –¥–∞—Ç—É
		day = dt.date.today()  # –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å
		year_now = day.year
	# –¢–µ–∫—É—â–∏–π –≥–æ–¥ - –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –≤–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥ –∏–ª–∏ –Ω–µ—Ç

		# –ü—Ä–æ–≤–µ—Ä–∫–∞ -  –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —ç—Ç–æ–º –≥–æ–¥—É –∏–ª–∏ –Ω–µ—Ç
		if day < day_x:
			tdelta = day_x - day

		elif day > day_x:
			# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π –≤ –≥–æ–¥—É
			while day > day_x:

				if year_now % 4 != 0 or year_now % 400 != 0:
					day_x = day_x + dt.timedelta(days=365)

				else:  # –í–∏—Å–æ–∫–æ—Å–Ω—ã–π –≥–æ–¥
					day_x = day_x + dt.timedelta(days=366)

			tdelta = day_x - day

		else:  # –ï—Å–ª–∏ –¥–∞—Ç—ã —Å–æ–≤–ø–∞–¥–∞—é—Ç
			bot.send_message(message.from_user.id, 'C–µ–≥–æ–¥–Ω—è!')
		bot.send_message(message.from_user.id, f'<em>{name}</em> <b>{tdelta.days}</b>',parse_mode='html')

#–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ —á–∞—Ç–∞

#–ü–∏—Å–∞—Ç—å –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –∂–∏—Ä–Ω—ã–º –∫–∞–ø—Å–ª–æ–∫–æ–º
@bot.message_handler(commands=['caps'])
def red_caps(message: types.Message):
	mess = list(message.text.split())
	mess.pop(0)
	mess = ' '.join(mess)
	mess = mess.upper()
	bot.send_message(chat_id= **************, text = f'<b>{mess}</b> '				 						    parse_mode='html')
	bot.delete_message(message.chat.id, message.id)

#–ü–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É
@bot.message_handler(commands=['v'])
def red_caps(message: types.Message):
	mess = list(message.text.split())
	mess.pop(0)
	mess = ' '.join(mess)
	mess = mess.capitalize()
	bot.send_message(chat_id= ***************, text = mess)
	bot.delete_message(message.chat.id, message.id)

#–ü–∏—Å–∞—Ç—å –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ —á–∞—Ç
@bot.message_handler(commands=['chat'])
def rat_voce(message: types.Message):
	bot.delete_message(message.chat.id, message.id)
	send = bot.send_message(message.from_user.id, '–ù–∞—á–Ω–µ–º')
	bot.send_message(message.from_user.id, '–ß—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —á—Ç–æ–± —è —Å–∫–∞–∑–∞–ª?')
	bot.register_next_step_handler(send, bot_voice)

def bot_voice(message: types.Message):
	mess = message.text.capitalize()
	bot.send_message(chat_id= *****************, text = mess)

# —Ä–µ–∞–∫—Ü–∏—è –±–æ—Ç–∞ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ
@bot.message_handler(regexp=r'–î–∞')
@bot.message_handler(regexp=r'–ù–µ—Ç')
@bot.message_handler(regexp= r'–î–∞[~!@#$%^&*()-_=+."‚Ññ;:?]+')
@bot.message_handler(regexp= r'–ù–µ—Ç[~!@#$%^&*()-_=+."‚Ññ;:?]+')

def get_answer(message: types.Message):

    yes='CgACAgIAAxkBAAIEoWN02hOt6_BDH_M59N5AQyF4dL4RAAJ4DgACg2WxSWvB91qjxq6CKwQ'

    no='CAACAgIAAxkBAAEGfphje6YT62vnUk72cCeVSRzHXbWzOgACSgADB7vYFPnWGPVMp7GzKwQ'

    answer = message.text.lower()
    match = re.search(pattern = r'[~!@#$%^&*()-_=+,."‚Ññ;%:?*/]+', string=answer) # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ
    if match == False:
		answer = answer
    else:
		answer = re.sub('[~!@#$%^&*()-_=+,."‚Ññ;:?/]+', '', answer)
# —É–¥–∞–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–æ–≤

	if answer == '–¥–∞':
		bot.send_animation(message.chat.id, yes )
	elif answer == '–Ω–µ—Ç':
		bot.send_sticker(message.chat.id, no )

if __name__ == '__main__':
	log.info('—Ä–∞–±–æ—Ç–∞—é')
	bot.infinity_polling()
# –ó–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É telegram, –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π




